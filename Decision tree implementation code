
import pandas as pd
from sklearn.tree import DecisionTreeClassifier
from sklearn.model_selection import train_test_split
from sklearn import metrics
from sklearn.tree import export_graphviz
from IPython.display import Image

iris = pd.read_csv('https://archive.ics.uci.edu/ml/machine-learning-databases/iris/iris.data', header=None)
iris.columns=['sepal_length', 'sepal_width', 'petal_length', 'petal_width', 'species']

X = iris.drop('species', axis=1)
y = iris['species']

# Split the data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)

# Create and train the decision tree classifier
clf = DecisionTreeClassifier()
clf.fit(X_train, y_train)

DecisionTreeClassifier
DecisionTreeClassifier()

# Make predictions on the testing data
y_pred = clf.predict(X_test)
accuracy = metrics.accuracy_score(y_test, y_pred)
print("Accuracy:", accuracy)

# Export the decision tree to a dot file
export_graphviz(clf, out_file='tree.dot', feature_names=X.columns, class_names=clf.classes_)

# Convert the dot file to a PNG image
!dot -Tpng tree.dot -o tree.png

# Display the decision tree image
Image(filename='tree.png')
